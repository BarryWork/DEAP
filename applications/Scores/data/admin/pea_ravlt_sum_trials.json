{"content":"\"### Sum of 5 learning trials for the RAVLT\\nWhy should the reader be interested in this new item? Describe your rationale to provide it and explain your sources. Start the computation of the new item by listing required existing items, for example age here:\\n```\\nvar promises = use([\\\"pea_ravlt_sd_trial_i_tc\\\", \\\"pea_ravlt_sd_trial_ii_tc\\\", \\\"pea_ravlt_sd_trial_iii_tc\\\", \\\"pea_ravlt_sd_trial_iv_tc\\\", \\\"pea_ravlt_sd_trial_v_tc\\\"]);\\n```\\nHere we can do the computation. We want to check if all the variables exist before computing the sum of the 5 arguments. The initial plus sign in the computation is used to convert the text column <code>a<\/code> to a number.\\n```\\nfunction calc(a, b, c, d, e) {\\n    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d) || isNaN(e)) {\\n        return '';\\n    }\\n    return +a+b+c+d+e;\\n}\\n```\\n\\nAdd the calculation of the new measure in another section delimited by three tick marks:\\n```\\nPromise.all(promises).then( function() {\\n  var data = new DataFrame(allMeasures);\\n  data = data.map(row => row.set(\\\"pea_ravlt_sum_trials\\\", +calc(row.get(\\\"pea_ravlt_sd_trial_i_tc\\\"), row.get(\\\"pea_ravlt_sd_trial_ii_tc\\\"), row.get(\\\"pea_ravlt_sd_trial_iii_tc\\\"), row.get(\\\"pea_ravlt_sd_trial_iv_tc\\\"), row.get(\\\"pea_ravlt_sd_trial_v_tc\\\"))  ));\\n  update(data, 'pea_ravlt_sum_trials');\\n});\\n```\\n\"","permission":"public","name":"pea_ravlt_sum_trials","description":"Sum of 5 learning trials"}