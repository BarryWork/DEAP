library(gamm4)
library(rjson)
library(stargazer)
#library(OpenMx)
library(knitr)
library(MuMIn)
library(R.matlab)
library(tableone)
#library(caret)

library(foreach)
library(doParallel)
library(jsonlite)

# magic code stargazer 
stargazer(data.frame(a=2),type="html");
stargazer(data.frame(a=2),type="html");

setwd('/var/www/html/data/ABCD/NewDataExpo/usercache');
data <- readRDS('/var/www/html/data/ABCD/data_uncorrected/nda18.Rds');
#redisConnect(nodelay=F);

#if (!file.exists("/var/www/html/applications/Scores/R/Template.csv")) {
#  out = data[,c("src_subject_id","eventname")]
#  write.csv(out,'/var/www/html/applications/Scores/R/Template.csv', row.names=FALSE)
#}
if (!file.exists("/var/www/html/data/ABCD/data_uncorrected/catagorical_variables.json")) {
	length = sapply(data, function(x) length(unique(x)))
	class = sapply(data, class)
	vars = data.frame(variable = names(data), class = as.character(class) , n.uniques = as.numeric(length))
	vars.site.scan = vars[vars$variable %in% c("site_id_l","mri_info_deviceserialnumber"),]
	vars = vars[vars$n.uniques <=10 & vars$n.uniques >=2,]
	vars = rbind(vars.site.scan,vars)

	write(toJSON(vars),"/var/www/html/data/ABCD/data_uncorrected/catagorical_variables.json") 
}

if (file.exists("/var/www/html/data/ABCD/SurfaceMaps/NBack/ico5-nBack-2_back_negface.mat")) {
  library(mgcv)
  library(rredis)
  # Load voxel data
  ico5_nBack_2_back_negface= readMat("/var/www/html/data/ABCD/SurfaceMaps/NBack/ico5-nBack-2_back_negface.mat");
  data.image.raw = ico5_nBack_2_back_negface;

  data.image = as.data.frame(data.image.raw$betamats[[1]][[1]])
  dir = unlist(data.image.raw$dirlist)
  src_subject_id = paste0("NDAR_",as.character(unlist(lapply(strsplit(dir,"_"), function(x){x[[3]]} ))))
  data.image = cbind(src_subject_id, data.image)
  #redisSet('ico5-nBack-2_back.mat-lh',data.image)

  data.image = as.data.frame(data.image.raw$betamats[[3]][[1]])
  dir = unlist(data.image.raw$dirlist)
  src_subject_id = paste0("NDAR_",as.character(unlist(lapply(strsplit(dir,"_"), function(x){x[[3]]} ))))
  data.image = cbind(src_subject_id, data.image)
  #redisSet('ico5-nBack-2_back.mat-rh',data.image)
}

#setwd('/var/www/html/applications/NewDataExpo/usercache');
#data <- readRDS('../../../data/ABCD/data_uncorrected/userdata_cache.RDS')
#format(object.size(ico5_nBack_0_back), units = "Mb")
#    data$FamilyID = data$rel_family_id;
#        data[["Age"]] = as.numeric(as.character(data[["Age"]]))
#        data$demo_comb_income_v2 = as.character(data$demo_comb_income_v2)
#            data$demo_comb_income_v2[data$demo_comb_income_v2 %in% c(1:6)] = "[<50K]"
#            data$demo_comb_income_v2[data$demo_comb_income_v2 %in% c(7,8)] = "[>=50K<100K]"
#            data$demo_comb_income_v2[data$demo_comb_income_v2 %in% c(9:10)] = "[>=100K]"
#            data$demo_comb_income_v2[data$demo_comb_income_v2 %in% c(11:12)] = NA
#            data$demo_comb_income_v2[data$demo_comb_income_v2 == "NA"] = NA
#    data$demo_prnt_marital_v2 = as.character(data$demo_prnt_marital_v2)
#        data$demo_prnt_marital_v2[data$demo_prnt_marital_v2 == "NA"] = NA
#education
#    data$nihtbx_demo_rescore_education = as.character(data$nihtbx_demo_rescore_education)
#        data$nihtbx_demo_rescore_education[data$nihtbx_demo_rescore_education == 999] = NA
#ethnicity
#    data$race_ethnicity = as.character(data$race_ethnicity)

